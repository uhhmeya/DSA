{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12860\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\

\f1 	Hello, my name is Ameya. I am a freshmen at the University of Rochester. My intended major is computer science. My email is amandhar@u.rochester.edu. My personal email is ameyamandhare17@gmail.com. My phone number is 571-577-3902.  This is Lab 67for my CSC 172 class.\
\
	This lab involves creating a binary min-heap data structure that implements the UR_Heap interface and works in the priority queue format. It includes an insert methods that adds elements to the heaps. The insert methods accounts for the heap getting filled up by expanding the array when necessary. It include other methods such as inserting at specific indexes and size() methods to return the size. It also includes other helper methods like bubble up and bubble down to maintain the order or the heap as elements are being added. The lab assumes that the input values are not null. This .ZIP file contains documents. The first document is the UR_Heap interface. The second document is the UR_HeapImplementation which implements the interface methods. The third file is the UR_HeapTest class which tests the methods implemented in the UR_HeapImplementation class. }